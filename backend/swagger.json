{
  "openapi": "3.0.0",
  "info": {
    "title": "Hfitness.me API",
    "description": "API endpoints for managing clients in Hfitness application",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    },
    {
      "url": "https://hfitness.me/api-Hfitness",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "clients",
      "description": "Operations related to clients"
    }
  ],
  "paths": {
    "/api/v1/clients": {
      "get": {
        "summary": "Get all clients",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to get all the clients",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client": {
      "post": {
        "summary": "Create a new client",
        "tags": ["clients"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Failed to create the client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },    
    "/api/v1/client/{id}": {
      "get": {
        "summary": "Get a client by ID",
        "tags": ["clients"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Failed to get the client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a client",
        "tags": ["clients"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Failed to update the client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a client",
        "tags": ["clients"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client deleted successfully"
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Failed to delete the client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "The unique identifier for the user"
          },
          "Username": {
            "type": "string",
            "description": "The username of the client"
          },
          "email": {
            "type": "string",
            "description": "The email address of the client"
          },
          "Age": {
            "type": "integer",
            "description": "The age of the client"
          },
          "Height": {
            "type": "number",
            "format": "decimal",
            "description": "The height of the client in meters"
          },
          "Weight": {
            "type": "number",
            "format": "decimal",
            "description": "The weight of the client in kilograms"
          },
          "Gender": {
            "type": "string",
            "description": "The gender of the client"
          },
          "FitnessGoal": {
            "type": "string",
            "description": "The fitness goal of the client"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the client was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the client was last updated"
          }
        }
      },
      "ClientInput": {
        "type": "object",
        "properties": {
          "Username":
          {
            "type": "string",
            "description": "The username of the client"
          },
          "email": {
            "type": "string",
            "description": "The email address of the client"
          },
          "userpassword": {
            "type": "string",
            "description": "The password of the client"
          },
          "Age": {
            "type": "integer",
            "description": "The age of the client"
          },
          "Height": {
            "type": "number",
            "format": "decimal",
            "description": "The height of the client in meters"
          },
          "Weight": {
            "type": "number",
            "format": "decimal",
            "description": "The weight of the client in kilograms"
          },
          "FitnessGoal": {
            "type": "string",
            "description": "The fitness goal of the client"
          },
          "Gender": {
            "type": "string",
            "description": "The gender of the client"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    }
  }
}